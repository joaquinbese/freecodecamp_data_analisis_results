{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  sex  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393    2     168    62.0    110     80            1     1   \n",
       "1          1  20228    1     156    85.0    140     90            3     1   \n",
       "2          2  18857    1     165    64.0    130     70            3     1   \n",
       "3          3  17623    2     169    82.0    150    100            1     1   \n",
       "4          4  17474    1     156    56.0    100     60            1     1   \n",
       "...      ...    ...  ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240    2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601    1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066    2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431    1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540    1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('medical_examination.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = np.array(df['weight'])\n",
    "b= np.array(df['height'])\n",
    "df['overweight']= (np.round((pow(a,2)/b),1)> 25).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "      <th>overweight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  sex  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393    2     168    62.0    110     80            1     1   \n",
       "1          1  20228    1     156    85.0    140     90            3     1   \n",
       "2          2  18857    1     165    64.0    130     70            3     1   \n",
       "3          3  17623    2     169    82.0    150    100            1     1   \n",
       "4          4  17474    1     156    56.0    100     60            1     1   \n",
       "...      ...    ...  ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240    2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601    1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066    2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431    1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540    1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  overweight  \n",
       "0          0     0       1       0           0  \n",
       "1          0     0       1       1           1  \n",
       "2          0     0       0       1           0  \n",
       "3          0     0       1       1           1  \n",
       "4          0     0       0       0           0  \n",
       "...      ...   ...     ...     ...         ...  \n",
       "69995      1     0       1       0           1  \n",
       "69996      0     0       1       1           1  \n",
       "69997      0     1       0       1           1  \n",
       "69998      0     0       0       1           1  \n",
       "69999      0     0       1       0           1  \n",
       "\n",
       "[70000 rows x 14 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "      <th>overweight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  sex  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393    2     168    62.0    110     80            0     0   \n",
       "1          1  20228    1     156    85.0    140     90            1     0   \n",
       "2          2  18857    1     165    64.0    130     70            1     0   \n",
       "3          3  17623    2     169    82.0    150    100            0     0   \n",
       "4          4  17474    1     156    56.0    100     60            0     0   \n",
       "...      ...    ...  ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240    2     168    76.0    120     80            0     0   \n",
       "69996  99995  22601    1     158   126.0    140     90            1     1   \n",
       "69997  99996  19066    2     183   105.0    180     90            1     0   \n",
       "69998  99998  22431    1     163    72.0    135     80            0     1   \n",
       "69999  99999  20540    1     170    72.0    120     80            1     0   \n",
       "\n",
       "       smoke  alco  active  cardio  overweight  \n",
       "0          0     0       1       0           0  \n",
       "1          0     0       1       1           1  \n",
       "2          0     0       0       1           0  \n",
       "3          0     0       1       1           1  \n",
       "4          0     0       0       0           0  \n",
       "...      ...   ...     ...     ...         ...  \n",
       "69995      1     0       1       0           1  \n",
       "69996      0     0       1       1           1  \n",
       "69997      0     1       0       1           1  \n",
       "69998      0     0       0       1           1  \n",
       "69999      0     0       1       0           1  \n",
       "\n",
       "[70000 rows x 14 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['cholesterol','gluc']] = (df[['cholesterol','gluc']] > 1).astype(int)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_feat=pd.melt(df, id_vars=[\"cardio\"],value_vars=[\"active\",\"alco\",\"cholesterol\",\"gluc\",\"overweight\",\"smoke\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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5MyZM/Lz89OZM2ec3RUAAMod5kkAACoWwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGArwgYAAAAAAGCrSs7uAAAAAEoWMfwTp7SbMeFJp7QLALi1ETag3OBDFAAAAADcHriNAgAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2IqwAQAAAAAA2KqSszsAAAAAALi1RAz/5Ka3mTHhyZveJn47rmwAAAAAAAC2ImwAAAAAAAC24jYKAACugMtDAQAAfjuubAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALaq5OwOAIDdIoZ/ctPbzJjw5E1vEwAAACivuLIBAAAAAADYirABAAAAAADYirABAAAAAADYirABAAAAAADYirABAAAAAADYyqlhw/vvv6/mzZvL19dXvr6+ioyM1DfffGPtP3funOLi4uTv7y8fHx/17t1bR44ccThGdna2unXrpsqVK6t27doaPny4Lly44FCzYsUK3XffffL09FSDBg2UnJxcrC/Tp09X/fr15eXlpdatW2vjxo035JwBAAAAALjdOTVsqFu3rt566y1lZGRo8+bN6tixo3r06KHt27dLkoYOHap//etf+vzzz7Vy5Ur9/PPP6tWrl/X6wsJCdevWTQUFBVq3bp0+/vhjJScnKzEx0ao5cOCAunXrpg4dOigrK0tDhgzR008/rSVLllg1n332mRISEjR69Gh99913Cg8PV3R0tI4ePXrzBgMAAAAAgNuEU8OG7t2765FHHlHDhg3VqFEjvfHGG/Lx8dH69et1+vRpffTRR5o0aZI6duyoiIgIzZ49W+vWrdP69eslSUuXLtWOHTv0//1//59atGihrl27auzYsZo+fboK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opiYGOXl5emRRx5RWlqaMjMz1aVLF3Xv3l3Z2dm/uc1Tp06pY8eOuvfee7V582alpKToyJEj+sMf/mDHKUkq5ZUNs2fPtq1BAAAAAADwq+rVq6tr166aO3euOnXqJEn64osvVLNmTXXo0EGurq4KDw+36seOHasFCxbon//8p+Lj439Tm9OmTdO9996rN99809o2a9YsBQcHa8+ePWrUqNH1nZRYswEAAAAAAKeKiYnRl19+qfz8fEnSnDlz1K9fP7m6uiovL0/Dhg1TWFiYqlWrJh8fH+3cufO6rmzYsmWLli9fLh8fH+vRpEkTSdL+/fttOadSXdlwuS+++ELz589Xdna2CgoKHPZ99913tnQMAAAAAICKoHv37jLGaNGiRbr//vu1evVqTZ48WZI0bNgwpaam6p133lGDBg3k7e2t3//+98X+X/yii+s+GGOsbefPn3eoycvLU/fu3fX2228Xe32dOnVsOacyX9nwt7/9TQMHDlRAQIAyMzPVqlUr+fv764cfflDXrl1t6RQAAAAAABWFl5eXevXqpTlz5ujTTz9V48aNdd9990mS1q5dqwEDBuixxx5Ts2bNFBgYqIMHD171WLVq1ZIkHT582NqWlZXlUHPfffdp+/btql+/vho0aODwqFKlii3nVOaw4b333tPMmTP17rvvysPDQyNGjFBqaqpeeOEFnT592pZOAQAAAABQkcTExGjRokWaNWuWYmJirO0NGzbUV199paysLG3ZskX9+/dXUVHRVY/j7e2tBx54QG+99ZZ27typlStX6tVXX3WoiYuL04kTJ/T4449r06ZN2r9/v5YsWaKBAweqsLDQlvMpc9iQnZ2tBx980DqJM2fOSJKeeOIJffrpp7Z0CgAAAACAiqRjx46qUaOGdu/erf79+1vbJ02apOrVq+vBBx9U9+7dFR0dbV31cDWzZs3ShQsXFBERoSFDhuj111932B8UFKS1a9eqsLBQnTt3VrNmzTRkyBBVq1bN4es3r0eZ12wIDAzUiRMnFBISonr16mn9+vUKDw/XgQMHHO4JAQAAAAAApePq6qqff/652Pb69etr2bJlDtvi4uIcnl9+W0VYWJjWrVvnsO3y/1+/eMXEjVLmyKJjx4765z//KUkaOHCghg4dqocfflh9+/bVY489ZnsHAQAAAADAraXMVzbMnDnTuj8kLi5O/v7+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irABAAAAAADYirABAAAAAADYirABAAAAAADYirABAAAAAADYirABAAAAAADYirABAAAAAADYqpKzOwAAAH6VPabZTW+zXuK2m94mAAC4/XFlAwAAAAAAsBVhAwAAAAAAsBW3UQAAAAAAyj1uN7y1cGUDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwFWEDAAAAAACwVSVndwBwtuwxzW56m/USt930NgEAAADgZiFsAAAAwFURygMAfgtuowAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibAAAAAAAALYibLjM9OnTVb9+fXl5eal169bauHGjs7sEAAAAAMAthbDhEp999pkSEhI0evRofffddwoPD1d0dLSOHj3q7K4BAAAAAHDLIGy4xKRJkzR48GANHDhQTZs21YwZM1S5cmXNmjXL2V0DAAAAAOCWQdjwvwoKCpSRkaGoqChrm6urq6KiopSenu7EngEAAAAAcGup5OwOlBf/+c9/VFhYqICAAIftAQEB2rVrV7H6/Px85efnW89Pnz4tScrNzb3i8Qvzf7Gxt6V3xr3wprd5tTEoCWNUMsaodJwxToxRyRijkpXHMapatapcXFzKfFzmyatjDigZY1QyxqhkjFHJmCdLdqPmyYrAxRhjnN2J8uDnn3/WHXfcoXXr1ikyMtLaPmLECK1cuVIbNmxwqE9KStJrr712s7sJAMBNdfr0afn6+pb5dcyTAICK4LfOkxUBYcP/KigoUOXKlfXFF1+oZ8+e1vbY2FidOnVK//jHPxzqL/+LTVFRkU6cOCF/f/9yk2zl5uYqODhYhw4d4hfgKhijkjFGJWOMSsYYlay8jpFdVzYwT96aGKOSMUYlY4xKxhiVrLyOEVc2XB23UfwvDw8PRUREKC0tzQobioqKlJaWpvj4+GL1np6e8vT0dNhWrVq1m9DTsvP19S1Xv5DlEWNUMsaoZIxRyRijkt0uY8Q8eXthjErGGJWMMSoZY1QyxujWQdhwiYSEBMXGxqply5Zq1aqVpkyZorNnz2rgwIHO7hoAAAAAALcMwoZL9O3bV8eOHVNiYqJycnLUokULpaSkFFs0EgAAAAAAXB1hw2Xi4+OveNvErcjT01OjR48udhkr/g9jVDLGqGSMUckYo5IxRjcfY14yxqhkjFHJGKOSMUYlY4xuPSwQCQAAAAAAbOXq7A4AAAAAAIDbC2EDAAAAAACwFWFDBeDi4qKvv/7a2d1wuoMHD8rFxUVZWVnO7spvYlf/69evrylTptjSp5stOTm5XHx13q08hreaso71rf57fi0DBgywvpoZ9mKe/NWt/vvDPMk8WRExT/4f5snyh7DhNpKUlKQWLVoU23748GF17dr15ncIt73y8qEGt69NmzbpmWeesfWYvG8rLuZJ3Gz8e4MbjXkS5RnfRlEBBAYGOrsLwDUVFhbKxcVFrq7kn7eqgoICeXh42H7cWrVq2X5M4HLMkyjvmCdvfcyTqIj4F6ucSUlJUdu2bVWtWjX5+/vrf/7nf7R//35r/08//aTHH39cNWrUUJUqVdSyZUtt2LBBycnJeu2117Rlyxa5uLjIxcVFycnJkhwvD33wwQc1cuRIhzaPHTsmd3d3rVq1SpKUn5+vYcOG6Y477lCVKlXUunVrrVix4mac/nUrafwut337dv3P//yPfH19VbVqVbVr186qLyoq0pgxY1S3bl15enqqRYsWSklJueHnUFRUpPHjx6tBgwby9PRUvXr19MYbb1j7f/jhB3Xo0EGVK1dWeHi40tPTHV7/5Zdf6u6775anp6fq16+viRMnXrO9U6dO6emnn1atWrXk6+urjh07asuWLdb+LVu2qEOHDqpatap8fX0VERGhzZs3a8WKFRo4cKBOnz5tveeSkpIklfweupiY//Of/1TTpk3l6emp7OxsnTx5Uk8++aSqV6+uypUrq2vXrtq7d+/1D2oZnTlzRjExMapSpYrq1KmjyZMnq3379hoyZEix2itdjnjq1Cm5uLg4nPO13ms3Qn5+vl544QXVrl1bXl5eatu2rTZt2qSioiLVrVtX77//vkN9ZmamXF1d9eOPP1rncK33xcW/EH/44YcKDQ2Vl5eXFi5cqGrVqqmwsFCSlJWVJRcXF7388svW655++mn98Y9/tJ6vWbNG7dq1k7e3t4KDg/XCCy/o7Nmz1v7LLw/dtWuX2rZtKy8vLzVt2lTffvvtFS+Bv9rvybXet2X1xRdfqFmzZvL29pa/v7+ioqJ09uxZ6zLON998UwEBAapWrZrGjBmjCxcuaPjw4apRo4bq1q2r2bNnOxxv27Zt6tixo3W8Z555Rnl5eVdtf9OmTapVq5befvttSSX/zG4XzJPXh3mSedIOzJPMk6XBPAkZlCtffPGF+fLLL83evXtNZmam6d69u2nWrJkpLCw0Z86cMXfeeadp166dWb16tdm7d6/57LPPzLp168x///tf89JLL5m7777bHD582Bw+fNj897//NcYYI8ksWLDAGGPMtGnTTL169UxRUZHV5rvvvuuw7emnnzYPPvigWbVqldm3b5+ZMGGC8fT0NHv27Lnp41FW1xq/AwcOGEkmMzPTGGPMTz/9ZGrUqGF69eplNm3aZHbv3m1mzZpldu3aZYwxZtKkScbX19d8+umnZteuXWbEiBHG3d39ho/DiBEjTPXq1U1ycrLZt2+fWb16tfnggw+s/jdp0sQsXLjQ7N692/z+9783ISEh5vz588YYYzZv3mxcXV3NmDFjzO7du83s2bONt7e3mT17tnX8kJAQM3nyZOt5VFSU6d69u9m0aZPZs2ePeemll4y/v785fvy4McaYu+++2/zxj380O3fuNHv27DHz5883WVlZJj8/30yZMsX4+vpa77kzZ84YY0p+D82ePdu4u7ubBx980Kxdu9bs2rXLnD171jz66KMmLCzMrFq1ymRlZZno6GjToEEDU1BQYL3Oz8/vho7/xf6HhISYb7/91mzbts089thjpmrVqubFF18sNoaXv6+MMebkyZNGklm+fLkxpuT32o3wwgsvmKCgILN48WKzfft2Exsba6pXr26OHz9uhg0bZtq2betQ/9JLLzlsK+l9MXr0aFOlShXTpUsX891335ktW7aYU6dOGVdXV7Np0yZjjDFTpkwxNWvWNK1bt7aO26BBA/PBBx8YY4zZt2+fqVKlipk8ebLZs2ePWbt2rbn33nvNgAEDrPpLx/rChQumcePG5uGHHzZZWVlm9erVplWrVg7/xpX0e3Kt921Z/Pzzz6ZSpUpm0qRJ5sCBA2br1q1m+vTp5syZMyY2NtZUrVrVxMXFmV27dpmPPvrISDLR0dHmjTfeMHv27DFjx4417u7u5tChQ8YYY/Ly8kydOnVMr169zLZt20xaWpoJDQ01sbGxVpuxsbGmR48exhhj0tLSjJ+fn/n73/9e6p/Z7YJ58vowTzJP2oF5knmyJMyTMMYYwoZy7tixY0aS2bZtm/n73/9uqlatetVfiNGjR5vw8PBi2y/9B+bo0aOmUqVKZtWqVdb+yMhIM3LkSGOMMT/++KNxc3Mz//73vx2O0alTJzNq1Ch7TuomunT8Lp/sRo0aZUJDQ60J+nJBQUHmjTfecNh2//33mz//+c83rL+5ubnG09PTmmQudbH/H374obVt+/btRpLZuXOnMcaY/v37m4cfftjhdcOHDzdNmza1nl86Ka1evdr4+vqac+fOObzmrrvusv5xrlq1qklOTr5if6/0oaY076HZs2cbSSYrK8vav2fPHiPJrF271tr2n//8x3h7e5v58+dftT275ebmGnd3d/P5559b206dOmUqV678mz9ElfRes1teXp5xd3c3c+bMsbYVFBSYoKAgM378eJOZmWlcXFzMjz/+aIwxprCw0Nxxxx3m/fffN8aU7n0xevRo4+7ubo4ePepQc99995kJEyYYY4zp2bOneeONN4yHh4c5c+aM+emnn4wk68P0oEGDzDPPPOPw+tWrVxtXV1fzyy+/GGMcx/qbb74xlSpVMocPH7bqU1NTr/gh6lq/J3a8jzIyMowkc/DgwWL7YmNjTUhIiCksLLS2NW7c2LRr1856fuHCBVOlShXz6aefGmOMmTlzpqlevbrJy8uzahYtWmRcXV1NTk6OddwePXqYr776yvj4+Jh58+ZZtaX5md2umCevD/Mk82RZMU8yT5YG8ySMMYbbKMqZvXv36vHHH9edd94pX19f1a9fX5KUnZ2trKws3XvvvapRo8ZvPn6tWrXUuXNnzZkzR5J04MABpaenKyYmRtKvlycVFhaqUaNG8vHxsR4rV668oZey2eVa43e5rKwstWvXTu7u7sX25ebm6ueff1abNm0ctrdp00Y7d+68IX2XpJ07dyo/P1+dOnW6ak3z5s2t/65Tp44k6ejRo9brr9TnvXv3WpfsXWrLli3Ky8uTv7+/w8/7wIED1s87ISFBTz/9tKKiovTWW2+V+D4o7XvIw8PD4Vx27typSpUqqXXr1tY2f39/NW7c+IaO+eV++OEHnT9/Xq1atbK2+fn5qXHjxr/5mNd6r90I+/fv1/nz5x3eC+7u7mrVqpV27typFi1aKCwsTHPnzpUkrVy5UkePHlWfPn0kle59IUkhISHF7hX93e9+pxUrVsgYo9WrV6tXr14KCwvTmjVrtHLlSgUFBalhw4ZWO8nJyQ5tREdHq6ioSAcOHCh2Xrt371ZwcLDD/fWX/pwuda3fEzuEh4erU6dOatasmfr06aMPPvhAJ0+etPbffffdDvdWBwQEqFmzZtZzNzc3+fv7O/zuhoeHq0qVKlZNmzZtVFRUpN27d1vbNmzYoD59+uj//b//p759+1rbS/szux0wT14f5knmyevFPMk8WRrMk5BYILLc6d69u0JCQvTBBx8oKChIRUVFuueee1RQUCBvb29b2oiJidELL7ygd999V3PnzlWzZs2sX+68vDy5ubkpIyNDbm5uDq/z8fGxpf0b6Vrjdzm7xtNOpenTpROxi4uLpF/vX/0t8vLyVKdOnSvea3xxFeKkpCT1799fixYt0jfffKPRo0dr3rx5euyxx656zNK8h7y9va3+38ouTpTGGGvb+fPnHWrK43stJiZGc+fO1csvv6y5c+eqS5cu8vf3l1S694Ukhwn/ovbt22vWrFnasmWL3N3d1aRJE7Vv314rVqzQyZMn9bvf/c6qzcvL05/+9Ce98MILxY5Tr1696zo/O39PrsTNzU2pqalat26dli5dqnfffVevvPKKNmzYUKz9i3240ray9umuu+6Sv7+/Zs2apW7dulnHLO3P7HbAPHl9mCfLhnny+jFPOmKeZJ6sSLiyoRw5fvy4du/erVdffVWdOnVSWFiYQwLYvHlzZWVl6cSJE1d8vYeHxxVT+cv16NFD586dU0pKiubOnWv9tUaS7r33XhUWFuro0aNq0KCBw6O8r9Zd0vhdrnnz5lq9enWxCU+SfH19FRQUpLVr1zpsX7t2rZo2bWp73y9q2LChvL29lZaW9pteHxYWdsU+N2rUqNgHGkm67777lJOTo0qVKhX7edesWdOqa9SokYYOHaqlS5eqV69e1oI9V3rP/db3UFhYmC5cuGBNQtL//Uxv5Jhf7s4775S7u7s2bdpkbTt9+rT27NlzxfqLf7E4fPiwte3y766+1nvtRrjrrrvk4eHh8F44f/68Nm3aZI1l//799f333ysjI0NffPGFw78DpX1fXEm7du105swZTZ482frAdPFD1IoVK9S+fXuHdnbs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",
      "text/plain": [
       "<Figure size 1058.88x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=sns.catplot(\n",
    "    data=df_feat, x='variable',hue='value',col=\"cardio\",\n",
    "    kind=\"count\",\n",
    ").set(ylabel = 'total')\n",
    "fig.savefig('catplot.png')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "def draw_heat_map():    \n",
    "    df_heat = df[(df['ap_lo'] <= df['ap_hi'])&(df['height'] >= df['height'].quantile(0.025))&(df['height'] >= df['height'].quantile(0.975))\n",
    "                &(df['weight'] >= df['weight'].quantile(0.025))&(df['weight'] <= df['weight'].quantile(0.975))]\n",
    "    corr = df_heat.corr()\n",
    "        \n",
    "\n",
    "        # Generate a mask for the upper triangle\n",
    "    \n",
    "    mask = np.triu(corr)\n",
    "        \n",
    "\n",
    "        # Set up the matplotlib figure\n",
    "    fig, ax = plt.subplots(figsize=(7, 5))\n",
    "        \n",
    "\n",
    "        # Draw the heatmap with 'sns.heatmap()'\n",
    "    sns.heatmap(corr,mask=mask, fmt='.1f',vmax=.3, linewidths=.5,square=True, cbar_kws = {'shrink':0.5},annot=True, center=0)\n",
    "    \n",
    "\n",
    "        # Do not modify the next two lines\n",
    "    fig.savefig('heatmap.png')\n",
    "    return fig\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function __main__.draw_heat_map()>"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "draw_heat_map"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
